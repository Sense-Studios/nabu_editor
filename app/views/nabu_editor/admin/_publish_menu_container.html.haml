#publish_menu_container.menu_editor{:style=>'display:none'}

  #publish_menu_container_overlay
    .row
      .col-sm-6
        %h4{:style=>"color:white;"}
          = @whitelabel["brand"]
          Channels
          /= t('publish_menu.marduq_channels')
        %button#hide_menu_container_overlay.btn.btn-material-burgundy
          = t('publish_menu.edit_site')

      .col-sm-6
        %h4{:style=>"color:white;"}
          = @whitelabel["brand"]
          Syndication
          /= t('publish_menu.marduq_syndication')
        %button#edit_rules.btn.btn-material-burgundy
          = t('publish_menu.edit_rules')

  / what form is this?
  =# render 'form'

  .row
    .col-sm-5.menu_all_videos
      .filter
        %input.form-control{:id=>"available_program_search", :type=>"text", :placeholder=> t('publish_menu.search') }
        %i.glyphicon.glyphicon-search.search_video_menu_icon{"aria-hidden"=> 'true'}

      %hr

      %ul#all_available.menu-editor.drop
        - @programs.each do |p|
          %li.new-item.ui-state-default.available_program_item{:id=>p['id'], "data" => { "target" => ""}}
            // prefetch
            - thumb = p['thumbnail'].gsub('http://', 'https://') unless  p['thumbnail'].nil? # https
            - thumb = thumb.gsub('cdnbakmi', 'cdnapisec') unless p['thumbnail'].nil?         # kaltura
            - thumb = thumb.gsub('ak.c', 'ec.c') unless p['thumbnail'].nil?                  # ooyala
            = image_tag thumb, :class=>'pull-left menu_video_image', :width=>'139px', :height=>'78px' unless p['thumbnail'].nil?
            .program_container
              %p.program_title= p['title'] unless p['title'].nil?
            .program_dragger

    .col-sm-7.menu_all_categories
      / Channel Menu Options
      %button#create_category_button.btn.btn-material-burgundy
        = t('publish_menu.create_category')
      %button#save_menu_button.btn.btn-material-pink
        = t 'publish_menu.save'
      %button#delete_menu_button.btn.btn-material-pink
        = t 'publish_menu.remove'
      %button#channel_config.pull-right.btn{:alt=>"configure channel", :title=>"configure channel"}
        .li.glyphicon.glyphicon-cog

      .menu_name
        %input{"type" => "text", "placeholder" => t('publish_menu.type_name'), "value" => ""}
      %ul#le_menu.categories
        .clear
      %input#menu_items.hidden{"name" => "menu[items]", "type" => "text", "value" => "{}"}



  /= link_to 'Show', @menu
  /= link_to 'Back', menus_path


:javascript
  var menudata = {}
  var programs = #{@programs.to_json}

= javascript_include_tag "nabu_editor/publish/edit_menu"
